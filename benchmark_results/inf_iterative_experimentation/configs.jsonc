/*

JSON with comments that lists the iterative changes that we have done during the iterative experimentation
of the different configurations of the INF solver. The key parameters to compare the results have been
the number of resolved instances, the wall or real time spent, and the memory used, in that order (but
considering all the differences too).

*/

{
    // Basic improvements
    "1" : ["Basic, without enabling any improvement feature",
           "1 Correct; 1GB memory (max 3GB); WT_mean=118s; Errors=4"],
    "2" : ["Enable conjunction version with direct association (conjunction when one tree has less depth than the other)",
           "2 Correct; 700MB memory (max 3GB); WT_mean=115s; Errors=4", "IMPROVEMENT"],
    "3" : ["Enable existential variable elimination with disjunction-conjunction (saving one conjunction by changing the order)",
           "16 Correct; 450MB memory (max 3GB); WT_mean=86s; Errors=4", "IMPROVEMENT"],
    "4" : ["Enable formula simplification in compactify and after each boolean operation",
           "17 Correct; 400MB memory (max 3GB); WT_mean=84s; Errors=4", "IMPROVEMENT"],
    "5" : ["Enable CNF preprocessor",
           "18 Correct; 200MB memory (max 1.5GB); WT_mean=82s; Errors=1", "IMPROVEMENT"],
    "6" : ["Enable node caching",
           "18 Correct; 93MB memory (max 700MB); WT_mean=82s; Errors=1", "IMPROVEMENT (Memory)"],
    "7" : ["Use 'is' to compare nodes (taking advantage of caching)",
           "18 Correct; 93MB memory (max 690MB); WT_mean=82s; Errors=1", "SAME (Kept for conceptual clarity)"],
    "8" : ["Enabled absorb_with_prefixes in compactify",
           "18 Correct; 93MB memory (max 690MB); WT_mean=82s; Errors=1", "SAME (Discarded to simplify algorithm)"],
    "9" : ["Disabled generational garbage collector",
           "18 Correct; 93MB memory (max 690MB); WT_mean=82s; Errors=1", "SAME (Kept for conceptual clarity)"],
    
    // Comparison with SAT instances and with and without using a SAT solver
    "10.A" : ["Testing SAT instances without applying PySAT SAT solver",
              "0/8 Correct; 126MB memory (max 190MB); WT_mean=TIMEOUT; Errors=0", "BAD"],
    "10.B" : ["Testing SAT instances with PySAT SAT solver",
              "8/8 Correct; 41MB memory (max 42MB); WT_mean=0.2s; Errors=0", "HUGE IMPROVEMENT"],

    // Parallelization
    // NOTE: memory used in parallel versions does not add up sub-process memory.
    // NOTE: from now on, we are using PySAT to solve the 8 SAT instances. So, to compare fairly with the configuration 9, we have to subtract
    //		 8 to the number of correctly solved instances.
    "11.A" : ["Parallelize conjunction (also those from disj_serial) without lazyness (DISABLED equals_with_is)",
           "24 (-8 = 16) Correct; 85MB memory (max 887MB); WT_mean=69s; Errors=1", "WORSE than 9"],
    "11.B" : ["Parallelize conjunction trying to apply lazyness (DISABLED equals_with_is, modifications to kill subprocesses but some remain alive)",
           "24 (-8 = 16) Correct; 81MB memory (max 850MB); WT_mean=69s; Errors=2+Dead_processes", "WORSE than 9"],
    "11.C" : ["Parallelize conjunction without lazyness and without caching nodes (disjunction and subprocesses should worsen)",
           "24 (-8 = 16) Correct; 140MB memory (max 1.9GB); WT_mean=69s; Errors=1", "WORSE than 9 (and more memory usage)"],

    "12.A" : ["Parallelize conjunction in disjunction (DISABLED conjunction parallelization, ENABLED cached nodes)",
           "23 (-8 = 15) Correct; 66MB memory (max 680MB); WT_mean=71s; Errors=1", "WORSE than 9"],
    "12.B" : ["Parallelize disjunction in disjunction (DISABLED conjunction parallelization (both), ENABLED cached nodes)",
           "26 (-8 = 18) Correct; 66MB memory (max 269MB); WT_mean=65s; Errors=1", "EQUAL to 9"],
    "12.C" : ["Parallelize conj and disj in disjunction (DISABLED conjunction parallelization, ENABLED cached nodes)",
           "19 (-8 = 11) Correct; 66MB memory (max 268MB); WT_mean=80s; Errors=0", "WORSE"],
    "12.D" : ["Full disjunction parallelization (DISABLED conjunction parallelization, ENABLED cached nodes)",
           "26 (-8 = 18) Correct; 65MB memory (max 268MB); WT_mean=65s; Errors=0", "EQUAL to 9 (but worse since some processes do not die immediately)"],

    "13.A" : ["Parallelize conjunction (without lazyness) and disjunction (only disj, and now not the conj from disj_serial) (ENABLED cached nodes)",
           "26 (-8 = 18) Correct; 98MB memory (max 495MB); WT_mean=65s; Errors=0", "SAME (as Disj-disj, more memory, processes don’t die immediately)"],
    "13.B" : ["Parallelize conjunction (without lazyness) and disjunction (only conjs) (ENABLED cached nodes)",
           "23 (-8 = 15) Correct; 79MB memory (max 878MB); WT_mean=71s; Errors=0", "WORSE (also, some processes don’t die)"],

    // Memoization of results of boolean operations
    "14": ["Serial Memo Manual dicts (NO PARALLELIZATION and with EQUALS_WITH_IS)",
           "27 (-8 = 19) Correct; 187MB memory (max 1.2GB); WT_mean=63s; Errors=0", "BETTER (at the cost of more memory)"],
    "15": ["Serial Memo Manual dicts IDS (NO PARALLELIZATION and with EQUALS_WITH_IS)",
           "27 Correct; 475MB memory (max 2.9GB); WT_mean=62.4s; Errors=0", "SAME (worse memory)"],
    // Corrected by adding subprocess memory (only issue: cannot know if new subprocesses reuse same memory area as before)
    "16": ["Serial Memo Manual dicts with Disjunction-disj parallelization (DISABLED EQUALS_WITH_IS)",
           "27 Correct; 300MB memory (max 2.8GB); WT_mean=63s; Errors=0", "SAME (WORSE memory)"],

    // Cached version
    "17": ["Cached version (manual dict management) without cleanup",
           "27 Correct; 938MB memory (max 4.4GB); WT_mean=62.4s; Errors=0", "SAME (WORSE memory than 14)"],
    "18": ["Cached version (manual dict management) with CLEANUP",
           "27 Correct; 618MB memory (max 2.85GB); WT_mean=62.4s; Errors=0", "SAME (WORSE memory than 14)"],

    // Final version: 14 Series with: Basic improvements + cached_nodes + memoization dicts conj-disj + equals_with_is
    "19": ["Final version cleaned of unnecessary code",
           "27 Correct; 184MB memory (max 1.37GB); WT_mean=62.5s; Errors=0", "SAME as 14 (cleanup didn’t affect)"],
    "20": ["Final version with lru_cache",
           "27 Correct; 244MB memory (max 2GB); WT_mean=62.4s; Errors=0", "SAME (WORSE memory)"]
}
